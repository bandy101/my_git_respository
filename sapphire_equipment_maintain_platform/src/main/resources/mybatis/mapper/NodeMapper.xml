<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sfe.ssm.dao.NodeDao">

    <resultMap id="NodeBaseMap" type="com.sfe.ssm.model.Node">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="parties" property="parties" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="nodetime" property="nodetime" jdbcType="TIMESTAMP"/>
        <result column="ordernum" property="ordernum" jdbcType="VARCHAR"/>
        <result column="imgurl" property="imgurl" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="NodeClassMap" type="com.sfe.ssm.model.Node">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="parties" property="parties" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="nodetime" property="nodetime" jdbcType="TIMESTAMP"/>
        <result column="ordernum" property="ordernum" jdbcType="VARCHAR"/>
        <result column="imgurl" property="imgurl" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="NodeinfoMap" type="com.sfe.ssm.model.Node">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="parties" property="parties" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="nodetime" property="nodetime" jdbcType="TIMESTAMP"/>
        <result column="ordernum" property="ordernum" jdbcType="VARCHAR"/>
        <!--<collection column="ordernum" property="child" ofType="com.sfe.ssm.model.Detection" select="selectDetection" />-->
        <collection property="child" ofType="com.sfe.ssm.model.Detection">
            <result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
            <result column="worktime" property="worktime" jdbcType="TIMESTAMP"/>
            <result column="ordernum" property="ordernum" jdbcType="VARCHAR"/>
            <result column="finishtime" property="finishtime" jdbcType="TIMESTAMP"/>
        </collection>
    </resultMap>

    <resultMap id="NodeinfosMap" type="com.sfe.ssm.model.Node">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="parties" property="parties" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="nodetime" property="nodetime" jdbcType="TIMESTAMP"/>
        <result column="ordernum" property="ordernum" jdbcType="VARCHAR"/>
        <!--<collection column="ordernum" property="child" ofType="com.sfe.ssm.model.Detection" select="selectDetection" />-->
        <collection property="child" ofType="com.sfe.ssm.model.Detection">
            <result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
            <result column="worktime" property="worktime" jdbcType="TIMESTAMP"/>
            <result column="ordernum" property="ordernum" jdbcType="VARCHAR"/>
            <result column="finishtime" property="finishtime" jdbcType="TIMESTAMP"/>
        </collection>
    </resultMap>

    <select id="getAllNode" resultMap="NodeBaseMap">
--     SELECT * FROM em_work_node
        SELECT  * FROM  em_work_node
    </select>

    <select id="selectDetection" resultMap="NodeBaseMap" parameterType="String">
        SELECT * FROM em_detection
        where ordernum=#{ordernum}
    </select>

    <select id="getNodeid" resultMap="NodeBaseMap">
        SELECT * FROM em_work_node
        where id =#{id} AND e.ordernum=d.ordernum
    </select>

    <select id="getNode" resultMap="NodeinfosMap"  parameterType="String">
        SELECT  * FROM  em_detection d,em_work_node e
        where e.ordernum=#{id}
        <!--<where>-->
        <!--<if test='ordernum != null and ordernum !="" and ordernum !="0" '>-->
        <!--AND ordernum = #{ordernum}-->
        <!--</if>-->
        <!--</where>-->
    </select>

    <insert id="createNode" parameterType="com.sfe.ssm.model.Node" useGeneratedKeys="true">
          insert into em_work_node(eid,partiesid,parties,content,ordernum,nodetime) VALUE (#{eid},#{partiesid},#{parties},#{content},#{ordernum},#{nodetime});
    </insert>

    <update id="updateNode" parameterType="com.sfe.ssm.model.Node">
        update em_work_node SET parties=#{parties},ordernum=#{ordernum},nodetime={nodetime}
        where id=#{id}
    </update>

    <delete id="deleteNode" parameterType="int">
        delete from em_work_node
        where id=#{id}
    </delete>


</mapper>